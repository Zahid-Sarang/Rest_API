let CustomeErrorHandler,JwtService;_948‍.x([["default",()=>_948‍.o]]);_948‍.w("../services/CustomeErrorHandling",[["default",["CustomeErrorHandler"],function(v){CustomeErrorHandler=v}]]);_948‍.w("../services/JwtService",[["default",["JwtService"],function(v){JwtService=v}]]);


const auth = async (req, res, next) => {
  let authHeader = req.headers.authorization;
  if (!authHeader) {
    return next(CustomeErrorHandler.unAuthorized());
  }
  const token = authHeader.split(" ")[1]; // split the token from the header
  try {
    const { _id, role } = await JwtService.verify(token);
    const user = {
      _id,
      role,
    };
    req.user = user; // passing the _id and role in the request
    next();
  } catch (error) {
    return next(CustomeErrorHandler.unAuthorized());
  }
};

_948‍.d(auth);
