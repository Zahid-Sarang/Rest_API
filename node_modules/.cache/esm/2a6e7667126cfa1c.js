let express,registerController,loginController,userController,refreshController,productController,auth,admin;_126‍.x([["default",()=>_126‍.o]]);_126‍.w("express",[["default",["express"],function(v){express=v}]]);_126‍.w("../controller",[["registerController",["registerController"],function(v){registerController=v}],["loginController",["loginController"],function(v){loginController=v}],["userController",["userController"],function(v){userController=v}],["refreshController",["refreshController"],function(v){refreshController=v}],["productController",["productController"],function(v){productController=v}]]);_126‍.w("../middlewares/auth.js",[["default",["auth"],function(v){auth=v}]]);_126‍.w("../middlewares/admin.js",[["default",["admin"],function(v){admin=v}]]);




const router = express.Router();

router.post("/register", registerController.register); // register user routes
router.post("/login", loginController.login); // login user routes
router.get("/me",auth ,userController.me); // me user routes
router.post('/refresh',refreshController.refresh) // refresh_token route
router.post('/logout',auth ,loginController.logout) // logout route

//===================================== Poduct Routes =======================================================//

router.post("/products",[auth,admin], productController.store); // create product routes
router.put("/products/:id",[auth,admin], productController.update); // update product routes


//===================================== User Routes =======================================================//

 
_126‍.d(router);
